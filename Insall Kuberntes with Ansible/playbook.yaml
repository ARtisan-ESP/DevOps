---
- name: Install Kubernetes on Ubuntu 22.04
  hosts: all
  become: yes
  tasks:
    - name: Disable swap
      command: swapoff -a
      ignore_errors: yes

    - name: Disable swap permanently
      lineinfile:
        path: /etc/fstab
        regexp: "^/swap"
        line: "#/swap"

    - name: Install dependencies for containerd and Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
        state: present
        update_cache: yes

    - name: Download and install containerd binary
      shell: |
        wget https://github.com/containerd/containerd/releases/download/v1.7.3/containerd-1.7.3-linux-amd64.tar.gz
        sudo tar Cxzvf /usr/local containerd-1.7.3-linux-amd64.tar.gz
        wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        sudo mkdir -p /usr/local/lib/systemd/system/
        sudo mv containerd.service /usr/local/lib/systemd/system/
        systemctl daemon-reload
        systemctl unmask containerd.service
        systemctl enable --now containerd.service

    - name: Install runc
      shell: |
        wget https://github.com/opencontainers/runc/releases/download/v1.1.9/runc.amd64
        sudo install -m 755 runc.amd64 /usr/local/sbin/runc

    - name: Add Docker's official GPG key
      shell: |
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt update
        sudo apt install -y containerd.io
        sudo containerd config default | sudo tee /etc/containerd/config.toml
        sudo sed -E -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
        systemctl daemon-reload
        systemctl restart containerd.service

    - name: Install CNI plugins
      shell: |
        sudo wget https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
        sudo mkdir -p /opt/cni/bin
        sudo tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.3.0.tgz

    - name: Load necessary kernel modules for Kubernetes
      shell: |
        sudo tee /etc/modules-load.d/containerd.conf <<EOF
        overlay
        br_netfilter
        EOF
        sudo modprobe br_netfilter overlay

    - name: Enable IPv4 forwarding
      shell: |
        sudo sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
        sudo tee /etc/sysctl.d/kubernetes.conf <<EOF
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
        EOF
        sysctl --system
        sysctl -a | grep net.ipv4.ip_forward

    - name: Install kubeadm, kubelet, and kubectl
      shell: |
        sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.26/deb/Release.key | sudo gpg --dearmor -o /usr/share/keyrings/k8s-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/k8s-archive-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.26/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        sudo apt update
        sudo apt install -y kubelet kubeadm kubectl
        sudo apt-mark hold kubelet kubeadm kubectl

    - name: Allow user to run systemctl without password
      lineinfile:
        path: /etc/sudoers.d/{{ ansible_user }}
        create: yes
        mode: "0440"
        line: "{{ ansible_user }} ALL=(ALL) NOPASSWD: /bin/systemctl"

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Start and enable containerd
      systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Enable kubectl and kubeadm completion
      shell: |
        sudo bash -c "kubeadm completion bash > /etc/bash_completion.d/kubeadm"
        sudo bash -c "kubectl completion bash > /etc/bash_completion.d/kubectl"
